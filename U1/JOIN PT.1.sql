-- JOINS
-- OBTENER EL LISTADO DE EMPLEADOS JUNTO COM
-- EL NOMBRE DEL DEPARTAMENTO EN EL QUE TARBAJAN
SELECT e.last_name || ' ' || e.first_name nombre,
       d.department_name departamento
FROM departments d JOIN employees e
ON d.department_id = e.department_id
WHERE salary > 6000;

SELECT e.last_name || ' ' || e.first_name nombre,
       department_id, d.department_name departamento
FROM departments d JOIN employees e
USING (department_id)
WHERE salary > 6000;


-- JOINS O REUNIONES (CONSULTAS MULTITABLA) 
-- SINTAXIS 

--- SELECT LISTA DE CAMPOS
/* SELECT T1.CAMPO1, T2.CAMPO2, T1.CAMPO3
FROM TABLA1 T1 JOIN TABLA2 T2 -- "T1,T2" ALIAS A LA TABLA-- 
-- ON CONDICION DE IGUALDAD: IGUALAR LA LLAVE PRIMARIA CON LA LLAVE FORANEA
USING (CAMPO CLAVE)| ON T1.ATRIBUTOPK = T2.ATRIBUTOFK (CONDICION DE IGUALDAD)
WHERE CONDICION (FILTRA FILAS POR LOS CAMPOS DE LA TABLA)
GROUP BY LISTA_DE_CAMPOS
HAVING CONDICION (FILTRA GRUPOS)
ORDER BY LISTA_DE_CAMPOS;
*/


-- OBTENER UNA LISTA DE TODOS LOS EMPLEADOS (ID, NOMBRE COMPLETO, EMAIL
-- SALARIO Y COMISION, JUNTO CON EL NOMBRE DEL DEPARTAMENTO EN EL CUAL
-- TRABAJAN )
SELECT E.EMPLOYEE_ID , E.LAST_NAME ||''|| E.FIRST_NAME "NOMBRE",
       E.EMAIL, E.SALARY "SUELDO", E.COMMISSION_PCT "COMISION",
       D.DEPARTMENT_NAME "DEPARTAMENTO"
FROM DEPARTMENTS D JOIN EMPLOYEES E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID;


-- OBTENER UNA LISTA DE TODOS LOS EMPLEADOS(NOMBRE COMPLETO, FECHA INGRESO
-- SALARIO Y COMISION, JUNTO CON EL NOMBRE DEL PUESTO QUE DESEMPEÑAN)

SELECT E.FIRST_NAME||' '||LAST_NAME "NOMBRE COMPLETO",
       E.HIRE_DATE "FECHA DE INGRESO",E.COMMISSION_PCT "COMISION",
       E.SALARY "SUELDO", J.JOB_TITLE "PUESTO QUE DESEMPEÑA"
FROM JOBS J JOIN EMPLOYEES E
ON J.JOB_ID = E.JOB_ID;
       

-- OBTENER UNA LISTA DE LOS EMPLEADOS QUE TRABAJAN EN TORONTO
-- MOSTRANDO SU ID, NOMBRE COMPLETO, SALARIO, NOMBRE DEL DEPARTAMENTO
-- EN QUE TRABAJAN Y PUESTO QUE DESEMPEÑAN


SELECT E.EMPLOYEE_ID "ID", E.LAST_NAME ||''|| E.FIRST_NAME " NOMBRE COMPLETO",
E.SALARY "SUELDO" , D.DEPARTMENT_NAME " NOMBRE DEPARTAMENTO"
FROM DEPARTMENTS D JOIN EMPLOYEES E 
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
-- AGREGAR UNA CONDICION DE OTRA TABLA
JOIN LOCATIONS L ON L.LOCATION_ID = D.LOCATION_ID
WHERE L.CITY = 'Toronto';


SELECT REGION_ID
FROM REGIONS;

-- ENCONTRAR ID, NOMBRE COMPLETO Y SUELDO DE TODOS LOS EMPLEADOS QUE 
-- TRABAJAN EN EUROPA

SELECT E.EMPLOYEE_ID "ID" ,E.LAST_NAME ||''|| E.FIRST_NAME " NOMBRE COMPLETO",
       E.SALARY "SALARIO"
FROM DEPARTMENTS D JOIN EMPLOYEES E ON D.DEPARTMENT_ID = E.DEPARTMENT_ID
JOIN LOCATIONS L ON L.LOCATION_ID = D.LOCATION_ID
JOIN COUNTRIES C ON C.COUNTRY_ID = L.COUNTRY_ID
JOIN REGIONS R ON R.REGION_ID = C.REGION_ID
WHERE R.REGION_NAME = 'Europe'; 


-- OBTENER UNA LISTA DE TODOS LOS EMPLEADOS (ID, NOMBRE COMPLETO, EMAIL
-- SALARIO Y COMISION, JUNTO CON EL NOMBRE DEL DEPARTAMENTO EN EL CUAL
-- TRABAJAN )
-- USO DEL USING
SELECT E.EMPLOYEE_ID , E.LAST_NAME ||''|| E.FIRST_NAME "NOMBRE",
       E.EMAIL, E.SALARY "SUELDO", E.COMMISSION_PCT "COMISION",
       D.DEPARTMENT_NAME "DEPARTAMENTO"
FROM DEPARTMENTS D JOIN EMPLOYEES E
USING (DEPARTMENT_ID);

-- OBTENER UN NUMERO DE EMPLEADOS POR DEPARTAMENTO
-- AGRUPAR 

SELECT D.DEPARTMENT_NAME "DEPARTAMENTO", COUNT(*) "EMPLEADOS"
FROM DEPARTMENTS D JOIN EMPLOYEES E
USING (DEPARTMENT_ID)
GROUP BY D.DEPARTMENT_NAME
ORDER BY D.DEPARTMENT_NAME;


-- JOINS EXTERNOS 


-- OBTENER UNA LISTA DE TODOS LOS EMPLEADOS (ID, NOMBRE COMPLETO, EMAIL
-- SALARIO Y COMISION, JUNTO CON EL NOMBRE DEL DEPARTAMENTO EN EL CUAL
-- TRABAJAN )
-- UN JOIIN INTERNO SOLO MUESTRA REGISTROS COINCIDENTES
SELECT E.EMPLOYEE_ID , E.LAST_NAME ||''|| E.FIRST_NAME "NOMBRE",
       E.EMAIL, E.SALARY "SUELDO", E.COMMISSION_PCT "COMISION",
       D.DEPARTMENT_NAME "DEPARTAMENTO"
FROM DEPARTMENTS D JOIN EMPLOYEES E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID;


-- JOIN IZQUIERDO (LEFT JOIN)
-- MUESTRA REGISTROS COINCIDENTES MAS LOS DE LA TABLA IZQUIERDA QUE NO
-- TIENEN REGISTRO VINCULADO A LA DERECHA 

SELECT E.EMPLOYEE_ID , E.LAST_NAME ||''|| E.FIRST_NAME "NOMBRE",
       E.EMAIL, E.SALARY "SUELDO", E.COMMISSION_PCT "COMISION",
       D.DEPARTMENT_NAME "DEPARTAMENTO"
FROM DEPARTMENTS D LEFT JOIN EMPLOYEES E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID;


-- RIGHT JOIN
SELECT E.EMPLOYEE_ID , E.LAST_NAME ||''|| E.FIRST_NAME "NOMBRE",
       E.EMAIL, E.SALARY "SUELDO", E.COMMISSION_PCT "COMISION",
       D.DEPARTMENT_NAME "DEPARTAMENTO"
FROM DEPARTMENTS D RIGHT JOIN EMPLOYEES E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID;

-- FULL JOIN
-- MUESTRA TODO QUE NO TIENEN REGISTROS VINCULADOS 
SELECT E.EMPLOYEE_ID , E.LAST_NAME ||''|| E.FIRST_NAME "NOMBRE",
       E.EMAIL, E.SALARY "SUELDO", E.COMMISSION_PCT "COMISION",
       D.DEPARTMENT_NAME "DEPARTAMENTO"
FROM DEPARTMENTS D FULL JOIN EMPLOYEES E
ON D.DEPARTMENT_ID = E.DEPARTMENT_ID;


-- ENCONTRAR TODOS LOS DEPARTAMENTOS QUE TIENEN EMPLEADOS Y AQUELLOS
-- QUE NO LO POSEEN , MOSTRAR NOMBRE DEL DEPARTAMENTO Y CUENTA DE EMPLEADOS
-- SI NO HAY EMPLEADOS MOSTRAR CERO

SELECT D.DEPARTMENT_NAME "NOMBRE DEL DEPARTAMENTO", 
COUNT(E.EMPLOYEE_ID)"EMPLEADOS"
FROM DEPARTMENTS D LEFT JOIN EMPLOYEES E
USING (DEPARTMENT_ID)
GROUP BY D.DEPARTMENT_NAME
HAVING COUNT(E.EMPLOYEE_ID) = 0
ORDER BY DEPARTMENT_NAME;


-- USO DE ALIAS EN LA CLAUSULA WHERE
SELECT NOMBRE,INGRESO,SALARIO,COMISION,MONTO_COMISION
 FROM (SELECT E.FIRST_NAME||' '||LAST_NAME NOMBRE,
       E.HIRE_DATE INGRESO,E.SALARY SALARIO,
       E.COMMISSION_PCT COMISION,
       E.SALARY * NVL(COMMISSION_PCT,0)MONTO_COMISION, 
       J.JOB_TITLE
FROM JOBS J JOIN EMPLOYEES E
ON J.JOB_ID = E.JOB_ID)
WHERE MONTO_COMISION > 2000;

-- SUBCONSULTAS
-- PERMITEN RESOLVER UNA INCOGNITA
-- EL VALOR DE LA INCOGNITA SERA UTILIZADO POR LA CONSULTA EXTERNA

-- QUE EMPLEADOS DESEMPEÑAN EL MISMO TRABAJO QUE ADAM FRIPP

SELECT EMPLOYEE_ID, LAST_NAME ||' '|| FIRST_NAME NOMBRE
FROM EMPLOYEES
WHERE JOB_ID = (SELECT JOB_ID FROM EMPLOYEES 
                WHERE LAST_NAME ||' '|| FIRST_NAME = 'Fripp Adam');
                
                
-- QUE EMPLEADOS GANAN UN SUELDO SUPERIOR AL PROMEDIO DEL SUELDO 
-- DE TODOS LOS EMPLEADOS 

SELECT EMPLOYEE_ID, LAST_NAME ||' '|| FIRST_NAME NOMBRE
FROM EMPLOYEES
WHERE SALARY > (SELECT AVG(SALARY) FROM EMPLOYEES);